{"version":3,"sources":["components/Box.jsx","components/EndGame.jsx","components/Game.jsx","App.jsx","index.jsx"],"names":["Box","isOn","id","handleBoxState","bolb","className","onClick","EndGame","restartGame","Game","props","numberOfClumns","numberOfRows","checkEndGame","endGame","row","col","state","boxStates","setState","drawArray","singleBoxes","updated","componentDidUpdate","firstStateArray","numbersOfRandoms","Math","floor","random","i","mapArray","j","push","name","on","switchBoxState","Number","substr","this","displayBoxes","map","box","key","uuid","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2ae2c56.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Box = ({ isOn, id, handleBoxState }) => {\r\n  const bolb = isOn ? 'isOn' : 'isOff';\r\n\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={`box ${bolb}`}\r\n      onClick={() => handleBoxState(id)}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\n\r\nconst EndGame = ({ restartGame }) => {\r\n  return (\r\n    <div className=\"endGame\">\r\n      <h1>end game</h1>\r\n      <button onClick={restartGame} className=\"btn\">Restart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EndGame;","import React, { Component } from 'react';\r\nimport Box from './Box';\r\nimport uuid from 'uuid/v1';\r\nimport EndGame from './EndGame';\r\n\r\nclass Game extends Component {\r\n  numberOfClumns = 5;\r\n  numberOfRows = 5;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // boxStates: this.drawArray(),\r\n      boxStates: [\r\n        [true, true, true, true, true],\r\n        [true, true, true, true, true],\r\n        [true, true, true, true, true],\r\n        [true, true, true, true, false],\r\n        [true, true, true, false, false],\r\n      ],\r\n      singleBoxes: [],\r\n      updated: false,\r\n      endGame: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mapArray();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.updated) {\r\n      this.mapArray();\r\n\r\n      this.checkEndGame();\r\n\r\n      this.setState({\r\n        updated: false\r\n      })\r\n    }\r\n  }\r\n\r\n  checkEndGame = () => {\r\n    let endGame = false;\r\n    for (let row = 0; row < this.numberOfRows; row++) {\r\n      for (let col = 0; col < this.numberOfClumns; col++) {\r\n        if (this.state.boxStates[row][col] === false) {\r\n          endGame = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!endGame) {\r\n      this.setState({\r\n        endGame: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  restartGame = () => {\r\n    const boxStates = this.drawArray();\r\n\r\n    this.setState({\r\n      boxStates: boxStates,\r\n      singleBoxes: [],\r\n      updated: true,\r\n      endGame: false,\r\n    });\r\n\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  drawArray = () => {\r\n    let firstStateArray = [\r\n      [false, false, false, false, false],\r\n      [false, false, false, false, false],\r\n      [false, false, false, false, false],\r\n      [false, false, false, false, false],\r\n      [false, false, false, false, false],\r\n    ]\r\n\r\n    let numbersOfRandoms = Math.floor(Math.random() * (this.numberOfClumns * 2)) + this.numberOfClumns;\r\n\r\n    for (let i = 0; i < numbersOfRandoms; i++) {\r\n      const col = Math.floor(Math.random() * this.numberOfClumns);\r\n      const row = Math.floor(Math.random() * this.numberOfClumns);\r\n      firstStateArray[row][col] = true;\r\n    }\r\n\r\n    return firstStateArray;\r\n  }\r\n\r\n  mapArray = () => {\r\n    let singleBoxes = [];\r\n\r\n    for (let i = 0; i < this.numberOfClumns; i++) {\r\n      for (let j = 0; j < this.numberOfRows; j++) {\r\n        singleBoxes.push({ name: `${i}-${j}`, on: this.state.boxStates[i][j] })\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      singleBoxes\r\n    })\r\n  }\r\n\r\n  switchBoxState = (col, row, boxStates) => {\r\n    if (col === 0 && row === 0) {\r\n      //left top corner\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n    } else if (col === this.numberOfClumns - 1 && row === 0) {\r\n      //right top corner\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n    } else if (col === this.numberOfClumns - 1 && row === this.numberOfRows - 1) {\r\n      //right bottom corner\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n    } else if (col === 0 && row === this.numberOfRows - 1) {\r\n      //left bottom corner\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n    } else if ((col > 0 && col < this.numberOfClumns - 1) && row === 0) {\r\n      //top edge\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n    } else if (col === this.numberOfClumns - 1 && (row > 0 && row < this.numberOfRows - 1)) {\r\n      //right edge\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n    } else if ((col > 0 && col < this.numberOfClumns - 1) && row === this.numberOfRows - 1) {\r\n      //bottom edge\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n    } else if (col === 0 && (row > 0 && row < this.numberOfRows - 1)) {\r\n      //left edge\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n    } else {\r\n      boxStates[row][col] = !boxStates[row][col];\r\n      boxStates[row][col - 1] = !boxStates[row][col - 1];\r\n      boxStates[row][col + 1] = !boxStates[row][col + 1];\r\n      boxStates[row - 1][col] = !boxStates[row - 1][col];\r\n      boxStates[row + 1][col] = !boxStates[row + 1][col];\r\n    }\r\n\r\n    return boxStates;\r\n  }\r\n\r\n  handleBoxState = (id) => {\r\n    const col = Number(id.substr(2, 1));\r\n    const row = Number(id.substr(0, 1));\r\n\r\n    let boxStates = [];\r\n\r\n    boxStates = this.switchBoxState(col, row, [...this.state.boxStates]);\r\n\r\n    this.setState({\r\n      boxStates,\r\n      updated: true,\r\n    })\r\n  }\r\n  render() {\r\n    const displayBoxes = this.state.singleBoxes.map(box =>\r\n      <Box\r\n        key={uuid()}\r\n        id={box.name}\r\n        isOn={box.on}\r\n        handleBoxState={this.handleBoxState}\r\n      />)\r\n\r\n    return (\r\n      this.state.endGame ? (\r\n        <EndGame restartGame={this.restartGame} />\r\n      ) : (\r\n          <div className=\"game-board\">\r\n            {\r\n              displayBoxes\r\n            }\r\n          </div>\r\n        )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h3 className=\"headlights\">\n        <span className=\"lights\">Lights -</span><span className=\"out\"> Out</span>\n      </h3>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/main.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}